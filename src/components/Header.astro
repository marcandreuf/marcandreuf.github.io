---
import { Icon } from 'astro-icon/components';
import { Image } from 'astro:assets';

import HeaderLink from '@/components/HeaderLink.astro';
import ThemeToggle from '@/components/ThemeToggle.astro';
import { SELECTORS } from '@/constants/dom';
import { IMAGE_SIZES } from '@/constants/image';
//import { NAVIGATION_ITEMS } from '@/constants/navigation';
import { ROUTES } from '@/constants/routes';
import { CONFIG_CLIENT } from '@/config/client';
//import { getActiveNavItemPath } from '@/utils/navigation';
//import { cn } from '@/utils/styles';

import Avatar from '@/assets/images/red-led.webp';

const { SCROLL_TO_TOP_ID } = SELECTORS;

const { pathname: routePathname } = Astro.url;
//const activeNavItemPath = getActiveNavItemPath(routePathname);

---

<header id={SCROLL_TO_TOP_ID} 
  class="group md:fixed md:top-0 md:left-0 md:right-0 md:z-50 md:backdrop-blur-md">
  <div class="flex group-[.menu-open]:flex-col md:!flex-row md:max-w-4xl py-2 px-4       
    md:container md:mx-auto md:justify-between md:items-center md:py-4 md:w-1/2 md:px-0 md:flex-grow" >
    {/* mobile nav */}
    <div class="w-full md:w-auto flex justify-between md:justify-stretch items-center">
      <HeaderLink href={ROUTES.HOME} 
      class="flex flex-row items-center gap-2 text-xl xs:text-2xl hover:text-inherit ">
        <Image
          {...IMAGE_SIZES.FIXED.AVATAR}
          loading="eager"
          class="shrink-0 select-none rounded-md border border-base-300"
          src={Avatar}
          alt="Profile picture"
        />
        <span >
          {CONFIG_CLIENT.AUTHOR_NAME}
        </span>
      </HeaderLink>      
      <mobile-button class="md:hidden">
        <button
          aria-expanded="false"
          aria-haspopup="menu"
          aria-label="Open main menu"
          type="button"
          class="group"
        >
          <Icon name="mdi:hamburger-menu" class="h-6 w-6 group-aria-expanded:hidden" />
          <Icon name="mdi:close" class="h-6 w-6 hidden group-aria-expanded:block" />
        </button>
      </mobile-button>
    </div>


    {/* nav items */    
    // <nav
    //   class="select-none hidden md:block group-[.menu-open]:block mt-0 group-[.menu-open]:mt-2"
    //   aria-label="Site navigation"
    // >
    //   <ul class="flex gap-4 group-[.menu-open]:flex-col md:!flex-row md:items-center">
    //     {
    //       NAVIGATION_ITEMS.map(({ title, path }) => (
    //         <li>
    //           <HeaderLink
    //             href={path}
    //             isActive={path === activeNavItemPath}
    //             {...(path === ROUTES.LINKS ? { 'data-astro-reload': true } : {})}
    //           >
    //             {title}
    //           </HeaderLink>
    //         </li>
    //       ))
    //     }
    //     <li class="shrink-0">
    //       <ThemeToggle />
    //     </li>
    //   </ul>
    // </nav>
    }

    <nav
      class="select-none hidden md:block group-[.menu-open]:block mt-0 group-[.menu-open]:mt-2"
      aria-label="Site navigation"
    >
    <ul class="flex gap-4 group-[.menu-open]:flex-col md:!flex-row md:items-center items-end md:ml-12">
        <li class="shrink-0">
          <ThemeToggle />
        </li>
      </ul>
    </nav>


  </div>
</header>

<script>
  class MobileNavBtn extends HTMLElement {
    private headerEl: HTMLElement;
    private menuOpen: boolean;
    private mobileButtonEl: HTMLButtonElement;

    toggleMobileMenu = () => {
      this.headerEl.classList.toggle('menu-open');
      this.menuOpen = !this.menuOpen;
      this.mobileButtonEl.setAttribute('aria-expanded', this.menuOpen.toString());
    };

    constructor() {
      super();
      this.headerEl = document.getElementById('main-header')!;
      this.mobileButtonEl = this.querySelector('button') as HTMLButtonElement;
      this.menuOpen = false;

      this.mobileButtonEl.addEventListener('click', this.toggleMobileMenu);
    }
  }

  customElements.define('mobile-button', MobileNavBtn);
</script>
